<?php

/**
 * @file
 * Updates Log module.
 */

declare(strict_types = 1);

/**
 * Implements hook_cron().
 *
 * Log module statuses when necessary.
 */
function updates_log_cron(): void {
  $now = time();
  $last = updates_log_business_last_get();
  if (!updates_log_business_should_update($now, $last)) {
    return;
  }
  updates_log_refresh();
  $statuses = updates_log_storage_get_statuses();
  updates_log_presentation_log($statuses);
  updates_log_business_last_set($now);
}

/**
 * Decides wether it's time for logging.
 *
 * @param int $now
 *   The epoch timestamp of the now.
 * @param int $last
 *   Last report time (spoch seconds).
 *
 * @return bool
 *   False = don't update. True = do update.
 */
function updates_log_business_should_update(int $now, ?int $last): bool {

  if (empty($last)) {
    return TRUE;
  }

  $now = date('Ymd', $now);
  $last = date('Ymd', $last);
  $status = $now !== $last;

  return $status;
}

/**
 * Get the last update time.
 *
 * @return int
 *   Return int of last update time, or NULL when first time.
 */
function updates_log_business_last_get(): ?int {

  /** @var ?mixed */
  $last = \Drupal::state()->get('updates_log.last');

  $last = empty($last) ? NULL : intval($last);

  return $last;
}

/**
 * Set the last update time.
 *
 * @param int $time
 *   Set update last time logged.
 */
function updates_log_business_last_set(?int $time): void {
  \Drupal::state()->set('updates_log.last', $time);
}

/**
 * Log the modules, and statuses.
 *
 * @param array<string, string> $statuses
 *   An associative array of ['module_name' => 'status_string'].
 */
function updates_log_presentation_log(array $statuses): void {
  $logger = \Drupal::logger('updates_log');
  foreach ($statuses as $key => $status) {
    $message = [
      'project' => $key,
      'status' => $status,
    ];
    // It is problematic to get JSON logged.
    // https://stackoverflow.com/a/67669934/1602728
    $logger->info(
      "{json}",
      $message
    );
  }
}

/**
 * Update module statuses, get the fresh data from internet.
 *
 * Ripped from update_cron().
 */
function updates_log_refresh(): void {
  update_refresh();
  update_fetch_data();
  update_clear_update_disk_cache();
}

/**
 * Get module statuses from Drupal.
 *
 * @return array<string, string>
 *   Return array of ['module_name' => 'status_string'].
 */
function updates_log_storage_get_statuses(): array {

  $map = [

    // From web/core/modules/update/src/UpdateManagerInterface.php.
    1 => 'NOT_SECURE',
    2 => 'REVOKED',
    3 => 'NOT_SUPPORTED',
    4 => 'NOT_CURRENT',
    5 => 'CURRENT',

    // From web/core/modules/update/src/UpdateFetcherInterface.php.
    -1 => 'NOT_CHECKED',
    -2 => 'UNKNOWN',
    -3 => 'NOT_FETCHED',
    -4 => 'FETCH_PENDING',
  ];

  /** @var array<mixed> */
  $available = update_get_available(TRUE);

  /** @var array<string, array{status: int}> */
  $project_data = update_calculate_project_data($available);

  ksort($project_data);
  $statuses = [];
  foreach ($project_data as $key => $data) {
    $status = $data['status'];
    $status = empty($map[$status]) ? '???' : $map[$status];
    $statuses[$key] = $status;
  }

  return $statuses;
}
